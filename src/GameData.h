#pragma once

namespace game
{

// CELLS
extern const char SpriteFileCells[];

enum SpriteIdCells : unsigned int
{
    // SCENE
    IND_EMPTY,
    IND_SCENE_ROCKS,
    IND_SCENE_ROCKS_SURR,
    IND_SCENE_RESOURCE,
    IND_BLOBS_SOURCE,
    IND_DIAMONDS_SOURCE,
    IND_BLOBS_SURR,
    IND_DIAMONDS_SURR,
    // F1
    IND_F1,
    IND_F1_CONNECTED,
    IND_F1_INFLUENCED,
    // F2
    IND_F2,
    IND_F2_CONNECTED,
    IND_F2_INFLUENCED,
    // F3
    IND_F3,
    IND_F3_CONNECTED,
    IND_F3_INFLUENCED,
    // SPECIAL
    IND_FOG_OF_WAR,

    NUM_IND_CELLS

};

// COLLECTIBLES
extern const char SpriteCollectiblesFile[];

enum SpriteCollectiblesId : unsigned int
{
    DIAMONDS_1,
    DIAMONDS_2,
    DIAMONDS_3,
    DIAMONDS_4,

    BLOBS_1,
    BLOBS_2,
    BLOBS_3,
    BLOBS_4
};

// INDICATORS
extern const char SpriteFileIndicators[];

enum SpriteIdIndicators : unsigned int
{
    // WALL INDICATORS
    IND_WB_HORIZONTAL_F1,
    IND_WB_VERTICAL_F1,
    IND_WB_TOP_LEFT_F1,
    IND_WB_TOP_RIGHT_F1,
    IND_WB_BOTTOM_LEFT_F1,
    IND_WB_BOTTOM_RIGHT_F1,

    IND_WB_HORIZONTAL_F2,
    IND_WB_VERTICAL_F2,
    IND_WB_TOP_LEFT_F2,
    IND_WB_TOP_RIGHT_F2,
    IND_WB_BOTTOM_LEFT_F2,
    IND_WB_BOTTOM_RIGHT_F2,

    IND_WB_HORIZONTAL_F3,
    IND_WB_VERTICAL_F3,
    IND_WB_TOP_LEFT_F3,
    IND_WB_TOP_RIGHT_F3,
    IND_WB_BOTTOM_LEFT_F3,
    IND_WB_BOTTOM_RIGHT_F3,

    IND_WB_INVALID,

    // MOVE INDICATOR
    IND_MOVE,

    // CONQUEST INDICATOR
    IND_CONQUEST_F1,
    IND_CONQUEST_F2,
    IND_CONQUEST_F3,

    // TOTAL
    NUM_IND_SPRITES,

    // SPECIAL VALUES
    IND_WB_FIRST = IND_WB_HORIZONTAL_F1
};

// ROCKS
extern const char SpriteRocksFile[];

enum SpriteRocksId : unsigned int
{
    ROCKS_ROW_END_L_1,
    ROCKS_ROW_END_R_1,
    ROCKS_COL_END_L_1,
    ROCKS_COL_END_R_1,
    ROCKS_ROW_1,
    ROCKS_ROW_2,
    ROCKS_ROW_3,
    ROCKS_COL_1,
    ROCKS_COL_2,
    ROCKS_COL_3,
    ROCKS_CORN_BL_1,
    ROCKS_CORN_BR_1,
    ROCKS_CORN_TL_1,
    ROCKS_CORN_TR_1,
    ROCKS_INTN,
    ROCKS_INTS,
    ROCKS_INTW,
    ROCKS_INTE,
    ROCKS_CROSS
};

// PARTICLES
extern const char SpriteFileParticles[];

enum SpriteIdParticles : unsigned int
{
    ID_PART_RECT_4x4
};

// SCENE ELEMENTS
extern const char SpriteFileSceneElements[];

enum SpriteIdSceneElements : unsigned int
{
    ID_SCENE_MOUNTAIN_L,
    ID_SCENE_MOUNTAIN_T,
    ID_SCENE_MOUNTAIN_B,
    ID_SCENE_MOUNTAIN_R,
    ID_SCENE_MOUNTAIN_1,
    ID_SCENE_MOUNTAIN_2,
    ID_SCENE_MOUNTAIN_3,
    ID_SCENE_MOUNTAIN_4,
    ID_SCENE_MOUNTAIN_5,
    ID_SCENE_MOUNTAIN_6,
    ID_SCENE_MOUNTAIN_7,
    ID_SCENE_MOUNTAIN_8
};

// STRUCTURES
extern const char SpriteFileStructures[];

enum SpriteIdStructures : unsigned int
{
    // BASE LVL 1
    ID_STRUCT_BASE_L1_F1,
    ID_STRUCT_BASE_L1_F1_SEL,
    ID_STRUCT_BASE_L1_F2,
    ID_STRUCT_BASE_L1_F2_SEL,
    ID_STRUCT_BASE_L1_F3,
    ID_STRUCT_BASE_L1_F3_SEL,
    // DEFENSIVE TOWER LVL 1
    ID_STRUCT_DTOWER_L1_F1,
    ID_STRUCT_DTOWER_L1_F1_SEL,
    ID_STRUCT_DTOWER_L1_F2,
    ID_STRUCT_DTOWER_L1_F2_SEL,
    ID_STRUCT_DTOWER_L1_F3,
    ID_STRUCT_DTOWER_L1_F3_SEL,
    ID_STRUCT_DTOWER_L2_F1,
    ID_STRUCT_DTOWER_L2_F1_SEL,
    ID_STRUCT_DTOWER_L2_F2,
    ID_STRUCT_DTOWER_L2_F2_SEL,
    ID_STRUCT_DTOWER_L2_F3,
    ID_STRUCT_DTOWER_L2_F3_SEL,
    ID_STRUCT_DTOWER_L3_F1,
    ID_STRUCT_DTOWER_L3_F1_SEL,
    ID_STRUCT_DTOWER_L3_F2,
    ID_STRUCT_DTOWER_L3_F2_SEL,
    ID_STRUCT_DTOWER_L3_F3,
    ID_STRUCT_DTOWER_L3_F3_SEL,
    // PRACTICE TARGET
    ID_PRACTICE_TARGET,
    ID_PRACTICE_TARGET_SEL,
    // RADAR
    ID_STRUCT_RADAR_F1,
    ID_STRUCT_RADAR_F1_SEL,
    ID_STRUCT_RADAR_F2,
    ID_STRUCT_RADAR_F2_SEL,
    ID_STRUCT_RADAR_F3,
    ID_STRUCT_RADAR_F3_SEL,
    ID_STRUCT_RADAR,
    // SOLAR PANEL
    ID_STRUCT_SOLAR_PANEL,
    ID_STRUCT_SOLAR_PANEL_F1,
    ID_STRUCT_SOLAR_PANEL_F1_SEL,
    ID_STRUCT_SOLAR_PANEL_F2,
    ID_STRUCT_SOLAR_PANEL_F2_SEL,
    ID_STRUCT_SOLAR_PANEL_F3,
    ID_STRUCT_SOLAR_PANEL_F3_SEL,
    // ENERGY GENERATOR
    ID_STRUCT_GEN_ENERGY,
    ID_STRUCT_GEN_ENERGY_F1,
    ID_STRUCT_GEN_ENERGY_F1_SEL,
    ID_STRUCT_GEN_ENERGY_F2,
    ID_STRUCT_GEN_ENERGY_F2_SEL,
    ID_STRUCT_GEN_ENERGY_F3,
    ID_STRUCT_GEN_ENERGY_F3_SEL,
    // MATERIAL GENERATOR
    ID_STRUCT_GEN_MATERIAL,
    ID_STRUCT_GEN_MATERIAL_F1,
    ID_STRUCT_GEN_MATERIAL_F1_SEL,
    ID_STRUCT_GEN_MATERIAL_F2,
    ID_STRUCT_GEN_MATERIAL_F2_SEL,
    ID_STRUCT_GEN_MATERIAL_F3,
    ID_STRUCT_GEN_MATERIAL_F3_SEL,
    // STORAGE ENERGY
    ID_STRUCT_STORAGE_ENERGY,
    ID_STRUCT_STORAGE_ENERGY_F1,
    ID_STRUCT_STORAGE_ENERGY_F1_SEL,
    ID_STRUCT_STORAGE_ENERGY_F2,
    ID_STRUCT_STORAGE_ENERGY_F2_SEL,
    ID_STRUCT_STORAGE_ENERGY_F3,
    ID_STRUCT_STORAGE_ENERGY_F3_SEL,
    // STORAGE MATERIAL
    ID_STRUCT_STORAGE_MATERIAL,
    ID_STRUCT_STORAGE_MATERIAL_F1,
    ID_STRUCT_STORAGE_MATERIAL_F1_SEL,
    ID_STRUCT_STORAGE_MATERIAL_F2,
    ID_STRUCT_STORAGE_MATERIAL_F2_SEL,
    ID_STRUCT_STORAGE_MATERIAL_F3,
    ID_STRUCT_STORAGE_MATERIAL_F3_SEL,
    // STORAGE DIAMONDS
    ID_STRUCT_STORAGE_DIAMONDS,
    ID_STRUCT_STORAGE_DIAMONDS_F1,
    ID_STRUCT_STORAGE_DIAMONDS_F1_SEL,
    ID_STRUCT_STORAGE_DIAMONDS_F2,
    ID_STRUCT_STORAGE_DIAMONDS_F2_SEL,
    ID_STRUCT_STORAGE_DIAMONDS_F3,
    ID_STRUCT_STORAGE_DIAMONDS_F3_SEL,
    // STORAGE BLOBS
    ID_STRUCT_STORAGE_BLOBS,
    ID_STRUCT_STORAGE_BLOBS_F1,
    ID_STRUCT_STORAGE_BLOBS_F1_SEL,
    ID_STRUCT_STORAGE_BLOBS_F2,
    ID_STRUCT_STORAGE_BLOBS_F2_SEL,
    ID_STRUCT_STORAGE_BLOBS_F3,
    ID_STRUCT_STORAGE_BLOBS_F3_SEL,

    // special values
    NUM_BASE_SPRITES_PER_FAC = 2,
    NUM_DTOWER_SPRITES_PER_FAC = 2,
    NUM_DTOWER_SPRITES_PER_LVL = 6,
    NUM_RADAR_SPRITES_PER_FAC = 2,
    NUM_SOLAR_PANEL_SPRITES_PER_FAC = 2,
    NUM_ENE_GEN_SPRITES_PER_FAC = 2,
    NUM_ENE_STO_SPRITES_PER_FAC = 2,
    NUM_MAT_GEN_SPRITES_PER_FAC = 2
};

// UNITS
extern const char SpriteFileUnits[];

enum SpriteIdUnits : unsigned int
{
    // unit 1
    SPR_UNIT_01_F1,
    SPR_UNIT_01_F1_SEL,
    SPR_UNIT_01_F2,
    SPR_UNIT_01_F2_SEL,
    SPR_UNIT_01_F3,
    SPR_UNIT_01_F3_SEL,

    // unit 2
    SPR_UNIT_02_F1,
    SPR_UNIT_02_F1_SEL,
    SPR_UNIT_02_F2,
    SPR_UNIT_02_F2_SEL,
    SPR_UNIT_02_F3,
    SPR_UNIT_02_F3_SEL,

    // unit 3
    SPR_UNIT_03_F1,
    SPR_UNIT_03_F1_SEL,
    SPR_UNIT_03_F2,
    SPR_UNIT_03_F2_SEL,
    SPR_UNIT_03_F3,
    SPR_UNIT_03_F3_SEL,

    // unit 4
    SPR_UNIT_04_F1,
    SPR_UNIT_04_F1_SEL,
    SPR_UNIT_04_F2,
    SPR_UNIT_04_F2_SEL,
    SPR_UNIT_04_F3,
    SPR_UNIT_04_F3_SEL,

    // 2 sprites per unit: unselected and selected
    NUM_UNIT_SPRITES_PER_FACTION = 2,
    // 6 sprites per type 2 * 3 factions
    NUM_UNIT_SPRITES_PER_TYPE = SPR_UNIT_02_F1 - SPR_UNIT_01_F1
};

// UNITS PARTICLES
extern const char SpriteFileUnitsParticles[];

enum SpriteIdUnitsParticles : unsigned int
{
    // faction 1
    SPR_UPART_LASER_F1,

    // faction 2
    SPR_UPART_LASER_F2,

    // faction 3
    SPR_UPART_LASER_F3,

    NUM_UNIT_PART_SPRITES_PER_FACTION = 1
};

// WALLS
extern const char SpriteFileWalls[];

enum SpriteWallsId : unsigned int
{
    // wall level 1 faction 1
    WALL_L1_F1_HORIZ,
    WALL_L1_F1_VERT,
    WALL_L1_F1_TL,
    WALL_L1_F1_TR,
    WALL_L1_F1_BL,
    WALL_L1_F1_BR,
    WALL_L1_F1_INTN,
    WALL_L1_F1_INTS,
    WALL_L1_F1_INTW,
    WALL_L1_F1_INTE,
    WALL_L1_F1_CROSS,

    // wall level 1 faction 2
    WALL_L1_F2_HORIZ,
    WALL_L1_F2_VERT,
    WALL_L1_F2_TL,
    WALL_L1_F2_TR,
    WALL_L1_F2_BL,
    WALL_L1_F2_BR,
    WALL_L1_F2_INTN,
    WALL_L1_F2_INTS,
    WALL_L1_F2_INTW,
    WALL_L1_F2_INTE,
    WALL_L1_F2_CROSS,

    // wall level 1 faction 3
    WALL_L1_F3_HORIZ,
    WALL_L1_F3_VERT,
    WALL_L1_F3_TL,
    WALL_L1_F3_TR,
    WALL_L1_F3_BL,
    WALL_L1_F3_BR,
    WALL_L1_F3_INTN,
    WALL_L1_F3_INTS,
    WALL_L1_F3_INTW,
    WALL_L1_F3_INTE,
    WALL_L1_F3_CROSS,

    // gate level 1 faction 1
    WALL_GATE_L1_F1_HORIZ_CLOSED,
    WALL_GATE_L1_F1_HORIZ_CLOSED_SEL,
    WALL_GATE_L1_F1_HORIZ_OPEN,
    WALL_GATE_L1_F1_HORIZ_OPEN_SEL,
    WALL_GATE_L1_F1_VERT_CLOSED,
    WALL_GATE_L1_F1_VERT_CLOSED_SEL,
    WALL_GATE_L1_F1_VERT_OPEN,
    WALL_GATE_L1_F1_VERT_OPEN_SEL,

    // gate level 1 faction 2
    WALL_GATE_L1_F2_HORIZ_CLOSED,
    WALL_GATE_L1_F2_HORIZ_CLOSED_SEL,
    WALL_GATE_L1_F2_HORIZ_OPEN,
    WALL_GATE_L1_F2_HORIZ_OPEN_SEL,
    WALL_GATE_L1_F2_VERT_CLOSED,
    WALL_GATE_L1_F2_VERT_CLOSED_SEL,
    WALL_GATE_L1_F2_VERT_OPEN,
    WALL_GATE_L1_F2_VERT_OPEN_SEL,

    // gate level 1 faction 3
    WALL_GATE_L1_F3_HORIZ_CLOSED,
    WALL_GATE_L1_F3_HORIZ_CLOSED_SEL,
    WALL_GATE_L1_F3_HORIZ_OPEN,
    WALL_GATE_L1_F3_HORIZ_OPEN_SEL,
    WALL_GATE_L1_F3_VERT_CLOSED,
    WALL_GATE_L1_F3_VERT_CLOSED_SEL,
    WALL_GATE_L1_F3_VERT_OPEN,
    WALL_GATE_L1_F3_VERT_OPEN_SEL
};

} // namespace game
